// function's parent scope is determined by its source placement
// rather than call sequence

var x = 5;
fn g() {
    return x;
}
fn f() {
    var x = 7;
    return g();
}
// with dynamic scope the parent scope of g() would be f()'s and g()
// would return 7; with static (lexical) scope the parent scope of g()
// is global scope and g() would return 5
assert f() == 5;
